[{"path":[]},{"path":"https://rphylopic.palaeoverse.org/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://rphylopic.palaeoverse.org/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://rphylopic.palaeoverse.org/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://rphylopic.palaeoverse.org/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://rphylopic.palaeoverse.org/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement: Pedro L. Godoy Bethany Allen. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://rphylopic.palaeoverse.org/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://rphylopic.palaeoverse.org/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://rphylopic.palaeoverse.org/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://rphylopic.palaeoverse.org/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://rphylopic.palaeoverse.org/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://rphylopic.palaeoverse.org/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":[]},{"path":[]},{"path":"https://rphylopic.palaeoverse.org/CONTRIBUTING.html","id":"minor-changes","dir":"","previous_headings":"How to contribute","what":"Minor changes","title":"Contributing to rphylopic","text":"can fix typos, spelling mistakes, grammatical errors documentation directly GitHub, provided done source file. means ’ll need edit roxygen2 comments .R file, .Rd file.","code":""},{"path":"https://rphylopic.palaeoverse.org/CONTRIBUTING.html","id":"substantial-changes","dir":"","previous_headings":"How to contribute","what":"Substantial changes","title":"Contributing to rphylopic","text":"like make substantial change, first file issue make sure someone development team agrees ’s needed. ’ve found bug, please file issue illustrates bug reproducible example.","code":""},{"path":"https://rphylopic.palaeoverse.org/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"How to contribute","what":"Pull request process","title":"Contributing to rphylopic","text":"(contributor) clone desired repository (.e. rphylopic R package) personal computer. changes made, switch new git branch (.e., main branch). changes complete, can submit changes merging via pull request (“PR”) GitHub. Note complete pull request include succinct description code changes , proper documentation (via roxygen2), unit tests (via testthat). description required initial pull request code review (see ), pull requests merged contain complete documentation tests. don’t feel comfortable implementing changes , can submit bug report feature request GitHub issue proper repository (e.g. rphylopic issues).","code":""},{"path":"https://rphylopic.palaeoverse.org/CONTRIBUTING.html","id":"code-review","dir":"","previous_headings":"","what":"Code review","title":"Contributing to rphylopic","text":"pull requests reviewed developer rphylopic (see collaborators) merging. review process ensure contributions 1) meet standards expectations described , 2) successfully perform functions claim perform, 3) don’t break parts codebase. Submitting pull request one rphylopic R packages automatically initiate R CMD check, lintr check, test coverage check via GitHub Actions. checks conduct automatic review ensure package broken new code code matches style guide (see ), manual review still required pull request can merged. Reviewers may questions reviewing pull request. expected respond questions via GitHub. fixes /changes required, expected make changes. required changes minor enough, reviewers may make , expected. questions lack background make required changes, work reviewer determine plan attack.","code":""},{"path":"https://rphylopic.palaeoverse.org/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to rphylopic","text":"Please note contributing rphylopic agree Code Conduct.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://rphylopic.palaeoverse.org/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see http://www.gnu.org/licenses/. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read http://www.gnu.org/philosophy/--lgpl.html.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://rphylopic.palaeoverse.org/articles/a-getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting started with rphylopic","text":"rphylopic package allows users easily fetch visualize silhouettes organisms PhyloPic. package allows users add silhouettes layers data points base R ggplot2 plots. Additional functionality allows users pick available silhouettes, transform (e.g., rotate recolor), save image files. vignette give overview package provide example usage.","code":""},{"path":"https://rphylopic.palaeoverse.org/articles/a-getting-started.html","id":"installation","dir":"Articles","previous_headings":"Introduction","what":"Installation","title":"Getting started with rphylopic","text":"rphylopic package can installed via CRAN dedicated GitHub repository development version preferred. install via CRAN, simply use: install development version, first install remotes package, use install_github() install rphylopic directly GitHub. can now load rphylopic using default library() function: get onto good stuff, development team small request. use rphylopic research, please cite associated publication. help us continue work supporting . can access appropriate citation via: Also, don’t forget acknowledge contributors silhouettes use (see Get attribution).","code":"install.packages(\"rphylopic\") install.packages(\"remotes\") remotes::install_github(\"palaeoverse/rphylopic\") library(rphylopic) citation(\"rphylopic\") ## To cite rphylopic in publications, use the following citation: ##  ##   Gearty, W. and Jones, L.A. 2023. rphylopic: An R package for fetching, transforming, and visualising ##   PhyloPic silhouettes. Methods in Ecology and Evolution, 14(11), 2700-2708. doi: ##   10.1111/2041-210X.14221. ##  ## A BibTeX entry for LaTeX users is ##  ##   @Article{, ##     title = {rphylopic: An R package for fetching, transforming, and visualising PhyloPic silhouettes}, ##     author = {William Gearty and Lewis A. Jones}, ##     year = {2023}, ##     volume = {14}, ##     number = {11}, ##     pages = {2700-2708}, ##     journal = {Methods in Ecology and Evolution}, ##     doi = {10.1111/2041-210X.14221}, ##   }"},{"path":"https://rphylopic.palaeoverse.org/articles/a-getting-started.html","id":"how-does-it-work","dir":"Articles","previous_headings":"","what":"How does it work?","title":"Getting started with rphylopic","text":"Every silhouette available via PhyloPic universally unique identifier (UUID). first step get PhyloPic silhouette R get UUID. via rphylopic can use get_uuid() function search PhyloPic based taxonomic phylogenetic name (e.g., Canis lupus pan-Mollusca) return first matched UUID. Using returned UUID, can fetch respective silhouette using get_phylopic(). However, multiple silhouettes (hence UUIDs) can exist searched name. n argument get_uuid() allows fetch n matched UUIDs.","code":""},{"path":"https://rphylopic.palaeoverse.org/articles/a-getting-started.html","id":"get-an-image-uuid","dir":"Articles","previous_headings":"How does it work?","what":"Get an image uuid","title":"Getting started with rphylopic","text":"","code":"# Load rphylopic library(rphylopic) # Get a single image UUID for a species uuid <- get_uuid(name = \"Canis lupus\") # Get the image for that UUID img <- get_phylopic(uuid = uuid) # But multiple silhouettes can exist per species... uuid <- get_uuid(name = \"Canis lupus\", n = 5)"},{"path":"https://rphylopic.palaeoverse.org/articles/a-getting-started.html","id":"pick-an-image","dir":"Articles","previous_headings":"How does it work?","what":"Pick an image","title":"Getting started with rphylopic","text":"multiple silhouettes can exist searched name, can difficult pick correct UUID, especially without visualizing images. pick_phylopic() function plots requested silhouettes provides interactive menu allow select right image . Let’s go option 1!","code":"# How do I pick?! # It's difficult without seeing the image itself, let's use: img <- pick_phylopic(name = \"Canis lupus\", n = 4, view = 4)"},{"path":"https://rphylopic.palaeoverse.org/articles/a-getting-started.html","id":"plot-an-image","dir":"Articles","previous_headings":"How does it work?","what":"Plot an image","title":"Getting started with rphylopic","text":"Now selected silhouette, can make plots!","code":""},{"path":"https://rphylopic.palaeoverse.org/articles/a-getting-started.html","id":"base-r","dir":"Articles","previous_headings":"How does it work? > Plot an image","what":"Base R","title":"Getting started with rphylopic","text":"Let’s start base R using add_phylopic_base(): plot chunk intro-base-plot Ah, ’ve found little secret! can actually skip steps getting UUID altogether just searching desired taxon add_phylopic_base(). However, always return first matched silhouette meaning might missing options! ’s always worth checking options pick_phylopic() first.","code":"# OK, now we've got the image we want... let's add it to a plot! plot(x = 1, y = 1, type = \"n\", ann = FALSE) add_phylopic_base(img = img, x = 1.25, y = 1.25, height = 0.25)  # But can't we just add an image straight away using the UUID? Sure! uuid <- get_uuid(name = \"Canis lupus\", n = 1) add_phylopic_base(uuid = uuid, x = 1, y = 1, height = 0.25)  # What about just using the first image linked to the name? Definitely! add_phylopic_base(name = \"Canis lupus\", x = 0.75, y = 0.75, height = 0.25)"},{"path":"https://rphylopic.palaeoverse.org/articles/a-getting-started.html","id":"ggplot2","dir":"Articles","previous_headings":"How does it work? > Plot an image","what":"ggplot2","title":"Getting started with rphylopic","text":"can also accomplish plot ggplot2 package. , ’ll use add_phylopic() function, functionality arguments : plot chunk intro-ggplot-plot","code":"library(ggplot2) p <- ggplot() +   coord_cartesian(xlim = c(0.6, 1.4), ylim = c(0.6, 1.4)) +   add_phylopic(img = img, x = 1.25, y = 1.25, height = 0.25)  # But can't we just add an image straight away using the UUID? Sure! uuid <- get_uuid(name = \"Canis lupus\", n = 1) p <- p + add_phylopic(uuid = uuid, x = 1, y = 1, height = 0.25)  # What about just using the first image linked to the name? Definitely! p + add_phylopic(name = \"Canis lupus\", x = 0.75, y = 0.75, height = 0.25)"},{"path":"https://rphylopic.palaeoverse.org/articles/a-getting-started.html","id":"transforming-silhouettes","dir":"Articles","previous_headings":"How does it work?","what":"Transforming silhouettes","title":"Getting started with rphylopic","text":"silhouette picked saved R environment, may useful transform image better suit particular visualization interest. implemented three user-friendly functions accommodate three transformations might desired: flipping, rotating, recoloring. flip_phylopic() function can used flip silhouette horizontally /vertically. may useful , example, want silhouettes face direction. rotate_phylopic() function can used rotate silhouette arbitrary number degrees. may useful trying align silhouette text objects within figure. Finally, recolor_phylopic() function can used modify fill color, outline color, /transparency silhouette. vast majority PhyloPic silhouettes solid black, fully opaque, transparent outline default. However, may useful change trying either match existing visualization color palette trying convey extra information, categorical data, color. Let’s see look like plot: plot chunk intro-transform-plot ’ll notice rotated silhouette smaller two silhouettes. ’ve specifed height silhouettes. width automatically set maintain original aspect ratio silhouette. case, aspect ratio rotated silhouette changed, height results smaller silhouette overall. ’d prefer, also specify width silhouettes. convenience, also included transformation options within visualization functions. default fill “black”, hence needed specify fill = \"original\" . However, transformed silhouette used multiple visualizations, suggest transforming silhouette first, saving new object, using new object visualization purposes.","code":"# Flip silhouette horizontally img_flip <- flip_phylopic(img = img, horizontal = TRUE, vertical = FALSE) # Rotate silhouette by 45 degrees img_rot <- rotate_phylopic(img = img, angle = 45) # Change fill color to blue and transparency to 50% img_col <- recolor_phylopic(img = img, alpha = 0.5, fill = \"blue\") ggplot() +   coord_cartesian(xlim = c(0.6, 1.4), ylim = c(0.6, 1.4)) +   add_phylopic(img = img_flip, x = 1.25, y = 1.25, height = 0.25) +   add_phylopic(img = img_rot, x = 1, y = 1, height = 0.25) +   add_phylopic(img = img_col, x = 0.75, y = 0.75, height = 0.25,                fill = \"original\")"},{"path":"https://rphylopic.palaeoverse.org/articles/a-getting-started.html","id":"get-attribution","dir":"Articles","previous_headings":"How does it work?","what":"Get attribution","title":"Getting started with rphylopic","text":"Now ’ve made plot used silhouettes, acknowledge contributors made silhouettes. Fortunately, rphylopic includes get_attribution() function get contributor data specific images: function can even write little blurb include publications:","code":"# Get valid uuid uuid <- get_uuid(name = \"Nycticebus\") # Get attribution data for uuid get_attribution(uuid = uuid) ## $images ## $images$`7f877a9e-53d7-48d0-a422-d3fa0ff5e2f9` ## $images$`7f877a9e-53d7-48d0-a422-d3fa0ff5e2f9`$attribution ## [1] \"Mareike C. Janiak\" ##  ## $images$`7f877a9e-53d7-48d0-a422-d3fa0ff5e2f9`$contributor ## [1] \"Mareike Janiak\" ##  ## $images$`7f877a9e-53d7-48d0-a422-d3fa0ff5e2f9`$contributor_uuid ## [1] \"7bed68fb-cf59-4e58-aed1-41e81269fb01\" ##  ## $images$`7f877a9e-53d7-48d0-a422-d3fa0ff5e2f9`$created ## [1] \"2020-05-19\" ##  ## $images$`7f877a9e-53d7-48d0-a422-d3fa0ff5e2f9`$contact ## character(0) ##  ## $images$`7f877a9e-53d7-48d0-a422-d3fa0ff5e2f9`$image_uuid ## [1] \"7f877a9e-53d7-48d0-a422-d3fa0ff5e2f9\" ##  ## $images$`7f877a9e-53d7-48d0-a422-d3fa0ff5e2f9`$license ## [1] \"https://creativecommons.org/publicdomain/mark/1.0/\" ##  ## $images$`7f877a9e-53d7-48d0-a422-d3fa0ff5e2f9`$license_abbr ## [1] \"Public Domain Mark 1.0\" # Get valid uuid uuid <- get_uuid(name = \"Nycticebus\") # Get attribution data for uuid get_attribution(uuid = uuid, text = TRUE) ## Organism silhouettes are from PhyloPic (https://www.phylopic.org/; T. Michael Keesey, 2023) and were added using the rphylopic R package ver. 1.5.0 (Gearty & Jones, 2023). Silhouette was made by Mareike C. Janiak, 2020 (Public Domain Mark 1.0). Silhouette was contributed by Mareike Janiak."},{"path":"https://rphylopic.palaeoverse.org/articles/a-getting-started.html","id":"save-an-image","dir":"Articles","previous_headings":"How does it work?","what":"Save an image","title":"Getting started with rphylopic","text":"able accomplish visualization needs within R (see vignettes examples), rare case need use silhouette outside R, ’ve also got covered save_phylopic() function. can save silhouettes range formats, including: Portable Document Format (PDF), Portable Network Graphics (PNG), Scale Vector Graphics (SVG), Tag Image File Format (TIFF), Joint Photographic Experts Group (JPEG), bitmap (BMP).","code":"# How do I save an image? # Get image img <- pick_phylopic(name = \"Phascolarctos cinereus\", n = 1) # Save image save_phylopic(img = img)"},{"path":"https://rphylopic.palaeoverse.org/articles/a-getting-started.html","id":"more-advanced-examples","dir":"Articles","previous_headings":"How does it work?","what":"More advanced examples","title":"Getting started with rphylopic","text":"Now ’ve learned ropes rphylopic, check advanced examples? Advanced examples ggplot2 Advanced examples base R","code":""},{"path":"https://rphylopic.palaeoverse.org/articles/b-advanced-ggplot.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Advanced examples in ggplot","text":"Herein provide three example applications rphylopic package combination ggplot2 package. However, note demonstrated functionality also available base R showcased separate vignette.","code":""},{"path":"https://rphylopic.palaeoverse.org/articles/b-advanced-ggplot.html","id":"basic-accession-and-transformation","dir":"Articles","previous_headings":"","what":"Basic accession and transformation","title":"Advanced examples in ggplot","text":"rphylopic package provides robust flexible tools access transform PhyloPic silhouettes. demonstrate using example dataset Antarctic penguins palmerpenguins R package. First, let’s load libraries penguin data: Now, let’s pick silhouette use penguins. Let’s pick #2: may noticed preview silhouette little slanted. Let’s rotate clockwise just smidgen: Now, let’s draft plot want make. case, let’s plot penguins’ bill lengths vs. flipper lengths: plot chunk ggplot-penguin-plot-1 ’s nice basic plot! know make nicer? added penguin silhouette plot. Sadly, don’t different silhouette species (although make one…), let’s just go putting single silhouette top panel. ’ll use geom_phylopic() function, require us make data.frame. Note x y aesthetics specify center silhouette, height argument specifies tall silhouette units y-axis. plot chunk ggplot-penguin-plot-2 Isn’t nifty! can go step , though. used little penguins instead points?! , can use geom_phylopic() function instead geom_point() function (case, want use image x-y pair): plot chunk ggplot-penguin-plot-3 default silhouette size geom_phylopic() large fit within plot area. won’t work well . Instead, can specify height width use (y-axis x-axis units, respectively): plot chunk ggplot-penguin-plot-3b Alternatively, can vary height based aspect data, values automatically scaled us. case, let’s try making size silhouettes relative penguins’ body masses. Behind scenes, rphylopic work magic rescale values 1 6. Note , depending data, may want customize values scaled using scale_height_continuous() (scale_width_continuous() using width aesthetic) just use scale_size_continuous(). ’ll just use defaults : plot chunk ggplot-penguin-plot-4 Nice! Finally, let’s give female male penguins different fill colors. Note default geom_phylopic() display legend, need set show.legend = TRUE. However, want legend fill colors, use guide = \"none\" size scale. also want show fill color legend, need override shape: plot chunk ggplot-penguin-plot-5 Hmm…colored dots legend great, lucky us, package also supplies convenient way include silhouettes legend. Due technical constraints, ’ll need specify images/uuids/names within phylopic_key_glyph(). supply one silhouette function, cycle generates legend keys (recycling needed). Note phylopic_key_glyph() currently support height/width aesthetics. plot chunk ggplot-penguin-plot-6 Now ’s nice figure!","code":"# Load libraries library(rphylopic) library(ggplot2) library(palmerpenguins) # Get penguin data and clean it data(penguins) penguins_subset <- subset(penguins, !is.na(sex)) # Pick a silhouette for Pygoscelis (here we pick #2) penguin <- pick_phylopic(\"Pygoscelis\", n = 3, view = 3) # It's a little slanted, so let's rotate it a little bit penguin_rot <- rotate_phylopic(img = penguin, angle = 15) ggplot(penguins_subset) +   geom_point(aes(x = bill_length_mm, y = flipper_length_mm)) +   labs(x = \"Bill length (mm)\", y = \"Flipper length (mm)\") +   facet_wrap(~species, ncol = 1) +   theme_bw(base_size = 15) silhouette_df <- data.frame(x = 59, y = 215, species = \"Adelie\") ggplot(penguins_subset) +   geom_point(aes(x = bill_length_mm, y = flipper_length_mm)) +   geom_phylopic(data = silhouette_df, aes(x = x, y = y), height = 30,                 img = penguin_rot) +   labs(x = \"Bill length (mm)\", y = \"Flipper length (mm)\") +   facet_wrap(~species, ncol = 1) +   theme_bw(base_size = 15) ggplot(penguins_subset) +   geom_phylopic(img = penguin_rot,                 aes(x = bill_length_mm, y = flipper_length_mm)) +   labs(x = \"Bill length (mm)\", y = \"Flipper length (mm)\") +   facet_wrap(~species, ncol = 1) +   theme_bw(base_size = 15) ggplot(penguins_subset) +   geom_phylopic(img = penguin_rot,                 aes(x = bill_length_mm, y = flipper_length_mm), height = 5) +   labs(x = \"Bill length (mm)\", y = \"Flipper length (mm)\") +   facet_wrap(~species, ncol = 1) +   theme_bw(base_size = 15) ggplot(penguins_subset) +   geom_phylopic(img = penguin_rot,                 aes(x = bill_length_mm, y = flipper_length_mm,                     height = body_mass_g)) +   labs(x = \"Bill length (mm)\", y = \"Flipper length (mm)\") +   facet_wrap(~species, ncol = 1) +   theme_bw(base_size = 15) ggplot(penguins_subset) +   geom_phylopic(img = penguin_rot,                 aes(x = bill_length_mm, y = flipper_length_mm,                     height = body_mass_g, fill = sex),                 show.legend = TRUE) +   labs(x = \"Bill length (mm)\", y = \"Flipper length (mm)\") +   scale_size_continuous(guide = \"none\") +   scale_fill_manual(\"Sex\", values = c(\"orange\", \"blue\"),                      labels = c(\"Female\", \"Male\"),                      guide = guide_legend(override.aes = list(shape = 21))) +   facet_wrap(~species, ncol = 1) +   theme_bw(base_size = 15) +   theme(legend.position = \"inside\", legend.position.inside = c(0.9, 0.9)) ggplot(penguins_subset) +   geom_phylopic(img = penguin_rot,                 aes(x = bill_length_mm, y = flipper_length_mm,                     height = body_mass_g, fill = sex),                 show.legend = TRUE,                 key_glyph = phylopic_key_glyph(img = penguin_rot)) +   labs(x = \"Bill length (mm)\", y = \"Flipper length (mm)\") +   scale_size_continuous(guide = \"none\") +   scale_fill_manual(\"Sex\", values = c(\"orange\", \"blue\"),                      labels = c(\"Female\", \"Male\")) +   facet_wrap(~species, ncol = 1) +   theme_bw(base_size = 15) +   theme(legend.position = \"inside\", legend.position.inside = c(0.9, 0.9))"},{"path":"https://rphylopic.palaeoverse.org/articles/b-advanced-ggplot.html","id":"geographic-distribution","dir":"Articles","previous_headings":"","what":"Geographic distribution","title":"Advanced examples in ggplot","text":"much way generic x-y plotting, rphylopic package can used combination ggplot2 plot organism silhouettes map. , plot data points (e.g., species occurrences) silhouettes. provide example might achieved. application, use example occurrence dataset early (Carboniferous Early Triassic) tetrapods palaeoverse R package visualize geographic distribution Diplocaulus fossils. First, let’s load libraries tetrapod data: ’ll subset occurrences Diplocaulus: Now, let’s plot occurrences world map. ggplot2 ’s built-function map_data() make breeze. Note use alpha = 0.75 case multiple occurrences place. way, darker fill color, occurrences geographic location. plot chunk ggplot-geog-plot-1 Now, penguin figure , can easily replace points silhouettes. plot chunk ggplot-geog-plot-2 Snazzy! Note used genus name name aesthetic , easily done name = \"Diplocaulus\" outside aes() call instead. However, plotting occurrences multiple genera, ’d definitely want plot different silhouettes using name = genus within aes() call. Also, note change projection map data using crs default_crs arguments coord_sf(). projecting data, note y-axis limits change projected limits. example, Robinson projection, y-axis limits roughly -8,600,000 8,600,000 projected coordinates. Therefore, may need adjust height argument/aesthetic accordingly projecting maps data. plot chunk ggplot-geog-plot-3","code":"# Load libraries library(rphylopic) library(ggplot2) library(palaeoverse) library(sf) library(maps) # Get occurrence data data(tetrapods) # Subset to desired group tetrapods <- subset(tetrapods, genus == \"Diplocaulus\") # Get map data world <- st_as_sf(map(\"world\", fill = TRUE, plot = FALSE)) world <- st_wrap_dateline(world) # Make map ggplot(world) +   geom_sf(fill = \"lightgray\", color = \"darkgrey\", linewidth = 0.1) +   geom_point(data = tetrapods, aes(x = lng, y = lat),              height = 4, alpha = 0.75, fill = \"blue\") +   theme_void() +   coord_sf() ggplot(world) +   geom_sf(fill = \"lightgray\", color = \"darkgrey\", linewidth = 0.1) +   geom_phylopic(data = tetrapods, aes(x = lng, y = lat, name = genus),                 height = 4, alpha = 0.75, fill = \"blue\") +   theme_void() +   coord_sf() # Set up a bounding box bbox <- st_graticule(crs = st_crs(\"ESRI:54030\"),                      lat = c(-89.9, 89.9), lon = c(-179.9, 179.9)) ggplot(world) +   geom_sf(fill = \"lightgray\", color = \"darkgrey\", linewidth = 0.1) +   geom_phylopic(data = tetrapods, aes(x = lng, y = lat, name = genus),                 height = 4E5, alpha = 0.75, fill = \"blue\") +   geom_sf(data = bbox) +   theme_void() +   coord_sf(default_crs = st_crs(4326), crs = st_crs(\"ESRI:54030\"))"},{"path":"https://rphylopic.palaeoverse.org/articles/b-advanced-ggplot.html","id":"phylogenetics","dir":"Articles","previous_headings":"","what":"Phylogenetics","title":"Advanced examples in ggplot","text":"Another common use case PhyloPic silhouettes represent taxonomic information. example, demonstrate use silhouettes within phylogenetic framework. case, phylogeny, taken phytools package, includes taxa across vertebrates. Even many taxonomic experts unlikely know scientific names 11 disparate taxa, ’ll replace names PhyloPic silhouettes. First, let’s load libraries data: can use vectorized version get_uuid() function retrieve UUID values species . However, just case get error, wrap get_uuid() call tryCatch() call. way, get either UUID NA species: Oh , weren’t able find silhouette Myotis lucifugus (little brown bat)! Good thing used tryCatch()! Given coarse resolution phylogeny, can just grab silhouette subfamily (Vespertilioninae): ’m also huge fan boar picture. Let’s choose alternative pick_phylopic(). Now ’ve got phylogeny UUIDs, go ahead create figure. However, time quick aside. time required geom_phylopic() rphylopic visualization functions scales number unique names/UUIDs, number plotted silhouettes. Therefore, plotting lot different silhouettes, functions can take quite long time poll PhyloPic unique name, download silhouettes, convert added plot. plan use silhouettes multiple figures, strongly suggest poll PhyloPic using get_phylopic() pick_phylopic(), save silhouettes R environment, use image objects visualization functions (img argument/aesthetic). Following advice, let’s get image objects 11 species make figure. Note , since ’ve used get_uuid() get 11 UUIDs, know valid, don’t need catch errors time. Now let’s go ahead plot phylogeny ggtree package: plot chunk ggplot-phylo-plot-1 Hmm…’s bit boring. Let’s add geological timescale background using coord_geo_polar() deeptime package. Note need use revts() function reverse time axis work coord_geo_polar(). plot chunk ggplot-phylo-plot-2 ’s looking lot prettier! Let’s go ahead add silhouettes now. Note need attach vertebrate_data object %<+% operator ggtree. plot chunk ggplot-phylo-plot-3 Note single height specified aspect ratio always maintained, hence silhouettes height different widths. Let’s fix silhouettes rotating 90 degrees: now finished product: plot chunk ggplot-phylo-plot-4 Beautiful!","code":"# Load libraries library(rphylopic) library(ggplot2) library(phytools) # Get vertebrate phylogeny and data data(vertebrate.tree) # Make a data.frame for the PhyloPic names vertebrate_data <- data.frame(species = vertebrate.tree$tip.label, uuid = NA) # Try to get PhyloPic UUIDs for the species names vertebrate_data$uuid <- sapply(vertebrate.tree$tip.label,                                function(x) {                                  tryCatch(get_uuid(x), error = function(e) NA)                                }) vertebrate_data ##                   species                                 uuid ## 1  Carcharodon_carcharias 00f208a3-887d-4ae8-838c-2124f53b9fc1 ## 2       Carassius_auratus abcb9d2c-db21-4b63-b8e7-b770b11ad288 ## 3     Latimeria_chalumnae 12c38a8a-6d68-4af3-ada3-05cafdfc25c2 ## 4            Homo_sapiens 9c6af553-390c-4bdd-baeb-6992cbc540b1 ## 5             Lemur_catta 8a187391-82a3-4d9b-a402-3a310bf7dc38 ## 6        Myotis_lucifugus                                 <NA> ## 7              Sus_scrofa 3d8acaf6-4355-491e-8e86-4a411b53b98b ## 8  Megaptera_novaeangliae 012afb33-55c3-4fc6-9ae3-3a91fda32fd5 ## 9              Bos_taurus dc5c561e-e030-444d-ba22-3d427b60e58a ## 10          Iguana_iguana 5dec03d9-66a2-4033-b1a9-6dbb3485199f ## 11     Turdus_migratorius 83b29bf0-f4f9-412d-8b3b-7faf4febd69d vertebrate_data$uuid[vertebrate_data$species == \"Myotis_lucifugus\"] <-   get_uuid(\"Vespertilioninae\") # Pick a different boar image; we'll pick #2 boar_svg <- pick_phylopic(\"Sus scrofa\", view = 5) # Extract the UUID vertebrate_data$uuid[vertebrate_data$species == \"Sus_scrofa\"] <-   attr(boar_svg, \"uuid\") vertebrate_data$svg <- lapply(vertebrate_data$uuid, get_phylopic) library(ggtree) # Plot the tree ggtree(vertebrate.tree, size = 1, layout = \"circular\") library(deeptime) # Plot the tree with a geological timescale in the background revts(ggtree(vertebrate.tree, size = 1)) +   scale_x_continuous(breaks = seq(-500, 0, 100),                      labels = seq(500, 0, -100),                      limits = c(-500, 0),                      expand = expansion(mult = 0)) +   scale_y_continuous(guide = NULL) +   coord_geo_radial(dat = \"periods\") +   theme_classic() revts(ggtree(vertebrate.tree, size = 1)) %<+% vertebrate_data +   geom_phylopic(aes(img = svg), height = 25) +   scale_x_continuous(breaks = seq(-500, 0, 100),                      labels = seq(500, 0, -100),                      limits = c(-500, 0),                      expand = expansion(mult = 0)) +   scale_y_continuous(guide = NULL) +   coord_geo_radial(dat = \"periods\") +   theme_classic() vertebrate_data$svg[[1]] <- rotate_phylopic(img = vertebrate_data$svg[[1]]) vertebrate_data$svg[[8]] <- rotate_phylopic(img = vertebrate_data$svg[[8]]) revts(ggtree(vertebrate.tree, size = 1)) %<+% vertebrate_data +   geom_phylopic(aes(img = svg), height = 25) +   scale_x_continuous(breaks = seq(-500, 0, 100),                      labels = seq(500, 0, -100),                      limits = c(-500, 0),                      expand = expansion(mult = 0)) +   scale_y_continuous(guide = NULL) +   coord_geo_radial(dat = \"periods\") +   theme_classic()"},{"path":"https://rphylopic.palaeoverse.org/articles/c-advanced-base.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Advanced examples in base R","text":"Herein provide three example applications rphylopic package using base R. However, note demonstrated functionality also available use ggplot2 package showcased separate vignette.","code":""},{"path":"https://rphylopic.palaeoverse.org/articles/c-advanced-base.html","id":"basic-accession-and-transformation","dir":"Articles","previous_headings":"","what":"Basic accession and transformation","title":"Advanced examples in base R","text":"rphylopic package provides robust flexible tools access transform PhyloPic silhouettes. demonstrate using example dataset Antarctic penguins palmerpenguins R package. First, let’s load libraries penguin data: Now, let’s pick silhouette use penguins. Let’s pick #2: may noticed preview silhouette little slanted. Let’s rotate clockwise just smidgen: Now, let’s clean data split data among three species: Now ’re going make three panel plot, one panel species. Within panel, ’ll plot penguins’ bill lengths vs. flipper lengths: plot chunk base-penguin-plot-1 ’s nice basic plot! know make nicer? added penguin silhouette plot. Sadly, don’t different silhouette species (although make one…), let’s just go putting single silhouette top panel. , can use add_phylopic_base() function. Note x y arguments specify center silhouette, height argument specifies tall silhouette units y-axis. plot chunk base-penguin-plot-2 Isn’t nifty! can go step , though. used little penguins instead points?! , can use add_phylopic_base() function. case, can specify img = penguin_rot since want use image x-y pair: plot chunk base-penguin-plot-3 Oh , silhouettes way big! default add_phylopic_base() make silhouette height plot, way big case . Let’s make size silhouettes relative penguins’ body masses. scaling factor 8 seems work well size figure. plot chunk base-penguin-plot-4 Finally, let’s give female male penguins different fill colors. ’ll also add legend last panel. plot chunk base-penguin-plot-5 Now ’s nice figure!","code":"# Load libraries library(rphylopic) library(palmerpenguins) # Get penguin data data(penguins) # Pick a silhouette for Pygoscelis (here we pick #2) penguin <- pick_phylopic(\"Pygoscelis\", n = 3, view = 3) # It's a little slanted, so let's rotate it a little bit penguin_rot <- rotate_phylopic(img = penguin, angle = 15) # Subset the data to remove rows with missing sex values penguins_subset <- subset(penguins, !is.na(sex)) # Split the data by species species_split <- split(penguins_subset, penguins_subset$species) # Set up the plot area par(mfrow = c(3, 1), mar = c(4, 4, 2, 1))  # Loop over the species and create a plot for each one for (i in seq_along(species_split)) {   species_data <- species_split[[i]]   plot(x = species_data$bill_length_mm, y = species_data$flipper_length_mm,        xlab = \"Bill length (mm)\", ylab = \"Flipper length (mm)\",        main = names(species_split)[i],        xlim = range(penguins_subset$bill_length_mm, na.rm = TRUE),        ylim = range(penguins_subset$flipper_length_mm, na.rm = TRUE)) } # Set up the plot area par(mfrow = c(3, 1), mar = c(4, 4, 2, 1))  # Loop over the species and create a plot for each one for (i in seq_along(species_split)) {   species_data <- species_split[[i]]   plot(x = species_data$bill_length_mm, y = species_data$flipper_length_mm,        xlab = \"Bill length (mm)\", ylab = \"Flipper length (mm)\",        main = names(species_split)[i],        xlim = range(penguins_subset$bill_length_mm, na.rm = TRUE),        ylim = range(penguins_subset$flipper_length_mm, na.rm = TRUE))   if (i == 1) add_phylopic_base(img = penguin_rot, x = 59, y = 215, height = 30) } # Set up the plot area par(mfrow = c(3, 1), mar = c(4, 4, 2, 1))  # Loop over the species and create a plot for each one for (i in seq_along(species_split)) {   species_data <- species_split[[i]]   plot(NA, xlab = \"Bill length (mm)\", ylab = \"Flipper length (mm)\",        main = names(species_split)[i],        xlim = range(penguins_subset$bill_length_mm, na.rm = TRUE),        ylim = range(penguins_subset$flipper_length_mm, na.rm = TRUE))   add_phylopic_base(img = penguin_rot,                     x = species_data$bill_length_mm,                     y = species_data$flipper_length_mm) } par(mfrow = c(3, 1), mar = c(4, 4, 2, 1))  for (i in seq_along(species_split)) {   species_data <- species_split[[i]]   plot(NA, xlab = \"Bill length (mm)\", ylab = \"Flipper length (mm)\",        main = names(species_split)[i],        xlim = range(penguins_subset$bill_length_mm, na.rm = TRUE),        ylim = range(penguins_subset$flipper_length_mm, na.rm = TRUE))   add_phylopic_base(img = penguin_rot,                     x = species_data$bill_length_mm,                     y = species_data$flipper_length_mm,                     height = species_data$body_mass_g /                       max(penguins_subset$body_mass_g, na.rm = TRUE) * 8) } par(mfrow = c(3, 1), mar = c(4, 4, 2, 1))  for (i in seq_along(species_split)) {   species_data <- species_split[[i]]   plot(NA, xlab = \"Bill length (mm)\", ylab = \"Flipper length (mm)\",        main = names(species_split)[i],        xlim = range(penguins_subset$bill_length_mm, na.rm = TRUE),        ylim = range(penguins_subset$flipper_length_mm, na.rm = TRUE))   add_phylopic_base(img = penguin_rot,                     x = species_data$bill_length_mm,                     y = species_data$flipper_length_mm,                     height = species_data$body_mass_g /                       max(penguins_subset$body_mass_g, na.rm = TRUE) * 8,                     fill = ifelse(species_data$sex == \"male\", \"blue\", \"orange\")) }  # Add a legend to the last plot legend(\"bottomright\", legend = c(\"Female\", \"Male\"), pch = 20,        col = c(\"orange\", \"blue\"), bty = \"n\")"},{"path":"https://rphylopic.palaeoverse.org/articles/c-advanced-base.html","id":"geographic-distribution","dir":"Articles","previous_headings":"","what":"Geographic distribution","title":"Advanced examples in base R","text":"much way generic x-y plotting, rphylopic package can used base R plot organism silhouettes map. , plot data points (e.g., species occurrences) silhouettes. provide example might achieved. application, use example occurrence dataset early (Carboniferous Early Triassic) tetrapods palaeoverse R package visualize geographic distribution Diplocaulus fossils. First, let’s load libraries tetrapod data: ’ll subset occurrences Diplocaulus: Now, let’s plot occurrences world map. use {geodata} raster packages generate map. add colored points top . Note use alpha = 0.75 case multiple occurrences place. way, darker color, occurrences geographic location. plot chunk base-geog-plot-1 Now, penguin figure , can easily replace points silhouettes. plot chunk base-geog-plot-2 Snazzy! Note used genus name name argument . However, plotting occurrences multiple genera, ’d definitely want plot different silhouettes using name = tetrapods$genus.","code":"# Load libraries library(rphylopic) library(maps) library(palaeoverse) # Get occurrence data data(tetrapods) # Subset to desired group tetrapods <- subset(tetrapods, genus == \"Diplocaulus\") # Plot map map(\"world\", col = \"lightgrey\", fill = TRUE) # Plot points points(x = tetrapods$lng, y = tetrapods$lat, cex = 2, pch = 16,        col = rgb(red = 0, green = 0, blue = 1, alpha = 0.75)) map(\"world\", col = \"lightgrey\", fill = TRUE) add_phylopic_base(name = \"Diplocaulus\", x = tetrapods$lng, y = tetrapods$lat,                   height = 8, fill = \"blue\", alpha = 0.75)"},{"path":"https://rphylopic.palaeoverse.org/articles/c-advanced-base.html","id":"phylogenetics","dir":"Articles","previous_headings":"","what":"Phylogenetics","title":"Advanced examples in base R","text":"Another common use case PhyloPic silhouettes represent taxonomic information. example, demonstrate use silhouettes within phylogenetic framework. case, phylogeny, taken phytools package, includes taxa across vertebrates. Even many taxonomic experts unlikely know scientific names 11 disparate taxa, ’ll replace names PhyloPic silhouettes. First, let’s load libraries data: can use vectorized version get_uuid() function retrieve UUID values species . However, just case get error, wrap get_uuid() call tryCatch() call. way, get either UUID NA species: Oh , weren’t able find silhouette Myotis lucifugus (little brown bat)! Good thing used tryCatch()! Given coarse resolution phylogeny, can just grab silhouette subfamily (Vespertilioninae): ’m also huge fan boar picture. Let’s choose alternative pick_phylopic(). Now ’ve got phylogeny UUIDs, go ahead create figure. However, time quick aside. time required add_phylopic_base() rphylopic visualization functions scales number unique names/UUIDs, number plotted silhouettes. Therefore, plotting lot different silhouettes, functions can take quite long time poll PhyloPic unique name, download silhouettes, convert added plot. plan use silhouettes multiple figures, strongly suggest poll PhyloPic using get_phylopic() pick_phylopic(), save silhouettes R environment, use image objects visualization functions (img argument/aesthetic). Following advice, let’s get image objects 11 species make figure. Note , since ’ve used get_uuid() get 11 UUIDs, know valid, don’t need catch errors time. Now let’s go ahead plot phylogeny ape package: plot chunk base-phylo-plot-1 Hmm…’s bit boring. Let’s add geological timescale bottom using axis_geo_phylo() palaeoverse package. plot chunk base-phylo-plot-2 ’s looking lot prettier! Let’s go ahead replace tip labels silhouettes now using add_phylopic_base(). Note may look like tips x-axis value 0, ’s actually trick axis_geo_phylo(). reality, left end x-axis 0, right end x-axis total height tree. can calculate using nodeHeights() function. plot chunk base-phylo-plot-3 Note single size specified aspect ratio always maintained, hence silhouettes height different widths. Let’s fix silhouettes rotating 90 degrees: now finished product: plot chunk base-phylo-plot-4 Beautiful!","code":"# Load libraries library(rphylopic) library(ggplot2) library(phytools) # Get vertebrate phylogeny and data data(vertebrate.tree) # Make a data.frame for the PhyloPic names vertebrate_data <- data.frame(species = vertebrate.tree$tip.label, uuid = NA) # Try to get PhyloPic UUIDs for the species names vertebrate_data$uuid <- sapply(vertebrate.tree$tip.label,                                function(x) {                                  tryCatch(get_uuid(x), error = function(e) NA)                                }) vertebrate_data ##                   species                                 uuid ## 1  Carcharodon_carcharias 00f208a3-887d-4ae8-838c-2124f53b9fc1 ## 2       Carassius_auratus abcb9d2c-db21-4b63-b8e7-b770b11ad288 ## 3     Latimeria_chalumnae 12c38a8a-6d68-4af3-ada3-05cafdfc25c2 ## 4            Homo_sapiens 9c6af553-390c-4bdd-baeb-6992cbc540b1 ## 5             Lemur_catta 8a187391-82a3-4d9b-a402-3a310bf7dc38 ## 6        Myotis_lucifugus                                 <NA> ## 7              Sus_scrofa 3d8acaf6-4355-491e-8e86-4a411b53b98b ## 8  Megaptera_novaeangliae 012afb33-55c3-4fc6-9ae3-3a91fda32fd5 ## 9              Bos_taurus dc5c561e-e030-444d-ba22-3d427b60e58a ## 10          Iguana_iguana 5dec03d9-66a2-4033-b1a9-6dbb3485199f ## 11     Turdus_migratorius 83b29bf0-f4f9-412d-8b3b-7faf4febd69d vertebrate_data$uuid[vertebrate_data$species == \"Myotis_lucifugus\"] <-   get_uuid(\"Vespertilioninae\") # Pick a different boar image; we'll pick #2 boar_svg <- pick_phylopic(\"Sus scrofa\", view = 5) # Extract the UUID vertebrate_data$uuid[vertebrate_data$species == \"Sus_scrofa\"] <-   attr(boar_svg, \"uuid\") vertebrate_data$svg <- lapply(vertebrate_data$uuid, get_phylopic) library(ape) # Plot the tree plot(vertebrate.tree) library(palaeoverse) # Plot the tree with a geological timescale on the bottom plot(vertebrate.tree) axis_geo_phylo(intervals = \"periods\") plot(vertebrate.tree, show.tip.label = FALSE) axis_geo_phylo(intervals = \"periods\") add_phylopic_base(img = vertebrate_data$svg,                   x = max(nodeHeights(vertebrate.tree)), y = 1:11, height = 0.5) vertebrate_data$svg[[1]] <- rotate_phylopic(img = vertebrate_data$svg[[1]]) vertebrate_data$svg[[8]] <- rotate_phylopic(img = vertebrate_data$svg[[8]]) plot(vertebrate.tree, show.tip.label = FALSE) axis_geo_phylo(intervals = \"periods\") add_phylopic_base(img = vertebrate_data$svg,                   x = max(nodeHeights(vertebrate.tree)), y = 1:11, height = 0.5)"},{"path":"https://rphylopic.palaeoverse.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"William Gearty. Author, maintainer. Lewis . Jones. Author. Scott Chamberlain. Author. David Miller. Contributor.","code":""},{"path":"https://rphylopic.palaeoverse.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gearty, W. Jones, L.. 2023. rphylopic: R package fetching, transforming, visualising PhyloPic silhouettes. Methods Ecology Evolution, 14(11), 2700-2708. doi: 10.1111/2041-210X.14221.","code":"@Article{,   title = {rphylopic: An R package for fetching, transforming, and visualising PhyloPic silhouettes},   author = {William Gearty and Lewis A. Jones},   year = {2023},   volume = {14},   number = {11},   pages = {2700-2708},   journal = {Methods in Ecology and Evolution},   doi = {10.1111/2041-210X.14221}, }"},{"path":"https://rphylopic.palaeoverse.org/index.html","id":"rphylopic-","dir":"","previous_headings":"","what":"Get Silhouettes of Organisms from PhyloPic","title":"Get Silhouettes of Organisms from PhyloPic","text":"purpose rphylopic package allow users add silhouettes organisms plots generated base R ggplot2. , uses silhouettes made available via PhyloPic website. rphylopic originally developed maintained Scott Chamberlain. ver. 1.0.0, package now developed maintained William Gearty Lewis . Jones Palaeoverse team.","code":""},{"path":"https://rphylopic.palaeoverse.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Get Silhouettes of Organisms from PhyloPic","text":"stable version rphylopic can installed CRAN using: development version rphylopic can installed via GitHub using:","code":"install.packages(\"rphylopic\") install.packages(\"remotes\") remotes::install_github(\"palaeoverse/rphylopic\")"},{"path":[]},{"path":"https://rphylopic.palaeoverse.org/index.html","id":"get-an-image-uuid","dir":"","previous_headings":"","what":"Get an image uuid","title":"Get Silhouettes of Organisms from PhyloPic","text":"","code":"# Load rphylopic library(rphylopic) # Get a single image uuid for a species uuid <- get_uuid(name = \"Canis lupus\", n = 1) # Get the image for that uuid img <- get_phylopic(uuid = uuid) # But multiple silhouettes can exist per species... uuid <- get_uuid(name = \"Canis lupus\", n = 5)"},{"path":"https://rphylopic.palaeoverse.org/index.html","id":"pick-an-image","dir":"","previous_headings":"","what":"Pick an image","title":"Get Silhouettes of Organisms from PhyloPic","text":"","code":"# How do I pick?! # It's difficult without seeing the image itself, let's use: img <- pick_phylopic(name = \"Canis lupus\", n = 5)"},{"path":[]},{"path":"https://rphylopic.palaeoverse.org/index.html","id":"base-r","dir":"","previous_headings":"Plot an image","what":"Base R","title":"Get Silhouettes of Organisms from PhyloPic","text":"","code":"# OK, now we've got the image we want... let's add it to a plot! plot(x = 1, y = 1, type = \"n\") add_phylopic_base(img = img, x = 1.25, y = 1.25, height = 0.25)  # But can't we just add an image straight away using the uuid? Sure! uuid <- get_uuid(name = \"Canis lupus\", n = 1) add_phylopic_base(uuid = uuid, x = 1, y = 1, height = 0.25)  # What about just using the first image linked to the name? Definitely! add_phylopic_base(name = \"Canis lupus\", x = 0.75, y = 0.75, height = 0.25)  # Black is a bit boring? OK... add_phylopic_base(name = \"Canis lupus\", x = 0.75, y = 1.25, height = 0.25, color = \"orange\")"},{"path":"https://rphylopic.palaeoverse.org/index.html","id":"ggplot2","dir":"","previous_headings":"Plot an image","what":"ggplot2","title":"Get Silhouettes of Organisms from PhyloPic","text":"","code":"# All of this functionality is available for ggplot2 as well... # But we use add_phylopic and geom_phylopic instead! library(ggplot2) # Get image uuid <- get_uuid(name = \"Iris\", n = 1) img <- get_phylopic(uuid = uuid) # Put a silhouette behind a plot ggplot(iris) +   add_phylopic(x = 6.1, y = 3.2, img = img, alpha = 0.2) +   geom_point(aes(x = Sepal.Length, y = Sepal.Width))    # Plot silhouettes as points! ggplot(iris) +    geom_phylopic(aes(x = Sepal.Length, y = Sepal.Width), img = img,                 color = \"purple\", height = 0.25)"},{"path":"https://rphylopic.palaeoverse.org/index.html","id":"get-attribution","dir":"","previous_headings":"","what":"Get attribution","title":"Get Silhouettes of Organisms from PhyloPic","text":"","code":"# PhyloPic has a lot of contributors and we should acknowledge  # their work. You can get data about images using get_attribution  # Get valid uuid uuid <- get_uuid(name = \"Nycticebus\") # Get attribution data for uuid get_attribution(uuid = uuid)"},{"path":"https://rphylopic.palaeoverse.org/index.html","id":"save-an-image","dir":"","previous_headings":"","what":"Save an image","title":"Get Silhouettes of Organisms from PhyloPic","text":"","code":"# How do I save an image? # Get image img <- pick_phylopic(name = \"Phascolarctos cinereus\", n = 1) # Save image save_phylopic(img = img)"},{"path":"https://rphylopic.palaeoverse.org/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute?","title":"Get Silhouettes of Organisms from PhyloPic","text":"interested contributing rphylopic R package, can following guidelines.","code":""},{"path":"https://rphylopic.palaeoverse.org/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Get Silhouettes of Organisms from PhyloPic","text":"community project, society, meeting feel important established expectations behaviour. Please read code conduct, reach ever face issues. Everyone right live work harassment-free environment.","code":""},{"path":"https://rphylopic.palaeoverse.org/index.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Get Silhouettes of Organisms from PhyloPic","text":"use rphylopic package work, please acknowledge contributors responsible image, acknowledge creator PhyloPic (Michael Keesey), cite following rphylopic: Gearty, W. Jones, L.. 2023. rphylopic: R package fetching, transforming, visualising PhyloPic silhouettes. Methods Ecology Evolution, 14(11), 2700-2708. doi: 10.1111/2041-210X.14221.","code":""},{"path":"https://rphylopic.palaeoverse.org/index.html","id":"cheat-sheet","dir":"","previous_headings":"","what":"Cheat sheet","title":"Get Silhouettes of Organisms from PhyloPic","text":"Hex logo cheatsheet Miranta Kouvari","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate a ggplot plot with PhyloPics — add_phylopic","title":"Annotate a ggplot plot with PhyloPics — add_phylopic","text":"Specify existing images, taxonomic names, PhyloPic uuids add PhyloPic silhouettes separate layer existing ggplot plot.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate a ggplot plot with PhyloPics — add_phylopic","text":"","code":"add_phylopic(   img = NULL,   name = NULL,   uuid = NULL,   filter = NULL,   x,   y,   ysize = deprecated(),   height = NA,   width = NA,   alpha = 1,   color = NA,   fill = \"black\",   horizontal = FALSE,   vertical = FALSE,   angle = 0,   hjust = 0.5,   vjust = 0.5,   remove_background = TRUE,   verbose = FALSE )"},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate a ggplot plot with PhyloPics — add_phylopic","text":"img Picture png array object, e.g., using get_phylopic(). name character. taxonomic name passed get_uuid(). uuid character. valid uuid PhyloPic silhouette (returned get_uuid() pick_phylopic()). filter character. Filter usage license name defined. Use \"\" limit results images require attribution, \"nc\" images allows commercial usage, \"sa\" images without ShareAlike clause. user can also combine filters vector. x numeric. x value silhouette center. y numeric. y value silhouette center. ysize use height width argument instead. height numeric. Height silhouette coordinate space. \"NA\", default, width \"NA\", silhouette large fits plot area. \"NA\" width specified, height determined aspect ratio original image. One height width must \"NA\". width numeric. Width silhouette coordinate space. \"NA\", default, height \"NA\", silhouette large fits plot area. \"NA\", default, height specified, width determined aspect ratio original image. One height width must \"NA\". alpha numeric. value 0 1, specifying opacity silhouette (0 fully transparent, 1 fully opaque). color character. Color silhouette outline. \"original\" NA specified, original color silhouette outline used (usually \"transparent\"). remove outline, can set \"transparent\". fill character. Color silhouette. \"original\" specified, original color silhouette used (usually \"black\"). color specified fill NA, color used fill color (backwards compatibility). remove fill, can set \"transparent\". horizontal logical. silhouette flipped horizontally? vertical logical. silhouette flipped vertically? angle numeric. number degrees rotate silhouette clockwise. default rotation. hjust numeric. numeric vector 0 1 specifying horizontal justification (left = 0, center = 0.5, right = 1). Note , due enforcement silhouette's aspect ratio, may unexpected behavior due interactions aspect ratio plot aspect ratio silhouette. vjust numeric. numeric vector 0 1 specifying vertical justification (top = 1, middle = 0.5, bottom = 0). Note , due enforcement silhouette's aspect ratio, may unexpected behavior due interactions aspect ratio plot aspect ratio silhouette. remove_background logical. white background removed silhouette(s)? See recolor_phylopic() details. verbose logical. attribution information used silhouette(s) printed console (see get_attribution())?","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annotate a ggplot plot with PhyloPics — add_phylopic","text":"One (one) img, name, uuid must specified. Use parameters x, y, ysize place silhouette specified position plot. aspect ratio silhouette always maintained. x /y may vectors numeric values multiple silhouettes plotted . case, arguments (except remove_background) may also vectors values, recycled necessary. specifying horizontal /vertical flip rotation, flip(s) always occur first. like customize behavior, can flip /rotate image within workflow using flip_phylopic() rotate_phylopic(). Note png array objects can rotated multiples 90 degrees. Also, outline colors currently work png array objects.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate a ggplot plot with PhyloPics — add_phylopic","text":"","code":"if (FALSE) { # \\dontrun{ # Put a silhouette behind a plot based on a taxonomic name library(ggplot2) ggplot(iris) +   add_phylopic(x = 6.1, y = 3.2, name = \"Iris\", alpha = 0.2) +   geom_point(aes(x = Sepal.Length, y = Sepal.Width))  # Put a silhouette in several places based on UUID posx <- runif(10, 0, 10) posy <- runif(10, 0, 10) heights <- runif(10, 0.4, 2) angle <- runif(10, 0, 360) hor <- sample(c(TRUE, FALSE), 10, TRUE) ver <- sample(c(TRUE, FALSE), 10, TRUE) fills <- sample(c(\"black\", \"darkorange\", \"grey42\", \"white\"), 10,   replace = TRUE) alpha <- runif(10, 0.3, 1)  p <- ggplot(data.frame(cat.x = posx, cat.y = posy), aes(cat.x, cat.y)) +   geom_blank() +   add_phylopic(uuid = \"23cd6aa4-9587-4a2e-8e26-de42885004c9\",                x = posx, y = posy, height = heights,                fill = fills, alpha = alpha, angle = angle,                horizontal = hor, vertical = ver) p + ggtitle(\"R Cat Herd!!\") } # }"},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Add PhyloPics to a base R plot — add_phylopic_base","title":"Add PhyloPics to a base R plot — add_phylopic_base","text":"Specify existing images, taxonomic names, PhyloPic uuids add PhyloPic silhouettes top existing base R plot (like points()).","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add PhyloPics to a base R plot — add_phylopic_base","text":"","code":"add_phylopic_base(   img = NULL,   name = NULL,   uuid = NULL,   filter = NULL,   x = NULL,   y = NULL,   ysize = deprecated(),   height = NULL,   width = NULL,   alpha = 1,   color = NA,   fill = \"black\",   horizontal = FALSE,   vertical = FALSE,   angle = 0,   hjust = 0.5,   vjust = 0.5,   remove_background = TRUE,   verbose = FALSE )"},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add PhyloPics to a base R plot — add_phylopic_base","text":"img Picture png array object, e.g., using get_phylopic(). name character. taxonomic name passed get_uuid(). uuid character. valid uuid PhyloPic silhouette (returned get_uuid() pick_phylopic()). filter character. Filter usage license name defined. Use \"\" limit results images require attribution, \"nc\" images allows commercial usage, \"sa\" images without ShareAlike clause. user can also combine filters vector. x numeric. x value silhouette center. \"NULL\", default, mean value x-axis used. y numeric. y value silhouette center. \"NULL\", default, mean value y-axis used. ysize use height width argument instead. height numeric. Height silhouette coordinate space. \"NULL\", default, width also \"NULL\", silhouette large fits plot area. \"NULL\" width specified, height determined aspect ratio original image. One height width must \"NULL\". width numeric. Width silhouette coordinate space. \"NULL\", default, height also \"NULL\", silhouette large fits plot area. \"NULL\" height specified, width determined aspect ratio original image. One height width must \"NULL\". alpha numeric. value 0 1, specifying opacity silhouette (0 fully transparent, 1 fully opaque). color character. Color silhouette outline. \"original\" NA specified, original color silhouette outline used (usually \"transparent\"). remove outline, can set \"transparent\". fill character. Color silhouette. \"original\" specified, original color silhouette used (usually \"black\"). color specified fill NA, color used fill color (backwards compatibility). remove fill, can set \"transparent\". horizontal logical. silhouette flipped horizontally? vertical logical. silhouette flipped vertically? angle numeric. number degrees rotate silhouette clockwise. default rotation. hjust numeric. numeric vector 0 1 specifying horizontal justification (left = 0, center = 0.5, right = 1). vjust numeric. numeric vector 0 1 specifying vertical justification (top = 1, middle = 0.5, bottom = 0). remove_background logical. white background removed silhouette(s)? See recolor_phylopic() details. verbose logical. attribution information used silhouette(s) printed console (see get_attribution())?","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_base.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add PhyloPics to a base R plot — add_phylopic_base","text":"One (one) img, name, uuid must specified. Use parameters x, y, hjust, vjust place silhouette specified position plot. height width unspecified, silhouette plotted full height /width plot. aspect ratio Picture objects always maintained (even plot resized). However, plot resized plotting silhouette, absolute size /position silhouette may change. argument (except remove_background) may vector values multiple silhouettes plotted. case, arguments may also vectors values, recycled necessary length longest vector argument. specifying horizontal /vertical flip rotation, flip(s) always occur first. like customize behavior, can flip /rotate image within workflow using flip_phylopic() rotate_phylopic(). Note png array objects can rotated multiples 90 degrees. Also, outline colors currently work png array objects.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_base.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add PhyloPics to a base R plot — add_phylopic_base","text":"","code":"if (FALSE) { # \\dontrun{ # single image plot(1, 1, type = \"n\", main = \"A cat\") add_phylopic_base(uuid = \"23cd6aa4-9587-4a2e-8e26-de42885004c9\",                   x = 1, y = 1, height = 0.4)  # lots of images using a uuid posx <- runif(10, 0, 1) posy <- runif(10, 0, 1) size <- runif(10, 0.1, 0.3) angle <- runif(10, 0, 360) hor <- sample(c(TRUE, FALSE), 10, TRUE) ver <- sample(c(TRUE, FALSE), 10, TRUE) fills <- sample(c(\"black\", \"darkorange\", \"grey42\", \"white\"), 10,                replace = TRUE)  plot(posx, posy, type = \"n\", main = \"A cat herd\") add_phylopic_base(uuid = \"23cd6aa4-9587-4a2e-8e26-de42885004c9\",                   x = posx, y = posy, height = size,                   fill = fills, angle = angle,                   horizontal = hor, vertical = ver)  # Example using a cat background cat <- get_phylopic(\"23cd6aa4-9587-4a2e-8e26-de42885004c9\") # setup plot area plot(posx, posy, type = \"n\", main = \"A cat herd, on top of a cat\",      xlim = c(0, 1), ylim = c(0, 1)) # plot background cat add_phylopic_base(img = cat, alpha = 0.2) # overlay smaller cats add_phylopic_base(img = cat, x = posx, y = posy, height = size, alpha = 0.8) } # }"},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a PhyloPic legend for a base R plot — add_phylopic_legend","title":"Add a PhyloPic legend for a base R plot — add_phylopic_legend","text":"Specify existing images, taxonomic names, PhyloPic uuids add PhyloPic silhouettes legend existing base R plot (like legend()).","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a PhyloPic legend for a base R plot — add_phylopic_legend","text":"","code":"add_phylopic_legend(   x,   y = NULL,   legend,   img = NULL,   name = NULL,   uuid = NULL,   ysize = deprecated(),   height = NULL,   color = NA,   fill = \"black\",   ... )"},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a PhyloPic legend for a base R plot — add_phylopic_legend","text":"x numeric character. Either x coordinate used position legend keyword accepted legend() \"topleft\", \"topright\", \"bottomleft\", \"bottomright\". y numeric. y coordinate used position legend. Can NULL (default) using keywords x. legend character. character vector labels appear legend. img Picture png array object, e.g., using get_phylopic(). name character. taxonomic name passed get_uuid(). uuid character. valid uuid PhyloPic silhouette (returned get_uuid() pick_phylopic()). ysize use height argument instead. height numeric. Height legend silhouette(s). width determined aspect ratio original image. color character. Color silhouette outline. \"original\" NA specified, original color silhouette outline used (usually \"transparent\"). remove outline, can set \"transparent\". fill character. Color silhouette. \"original\" specified, original color silhouette used (usually \"black\"). color specified fill NA, color used fill color (backwards compatibility). remove fill, can set \"transparent\". ... Additional arguments passed legend().","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_legend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a PhyloPic legend for a base R plot — add_phylopic_legend","text":"function can used add PhyloPic silhouettes legend base R plot. Arguments available legend() can used passed via .... Note arguments legend() compatible add_phylopic_legend(). include arguments modifying lines (e.g. lty, lwd, seg.len), points (e.g. pch, pt.lwd), shading (e.g. angle density). due add_phylopic_legend() using add_phylopic_base() generate legend symbols. However, arguments adjusting legend appearance text (e.g. cex), legend box (e.g. bg), color (e.g. border) compatible.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a PhyloPic legend for a base R plot — add_phylopic_legend","text":"","code":"# Get UUIDs uuids <- get_uuid(name = \"Canis lupus\", n = 2) # Generate empty plot plot(0:10, 0:10, type = \"n\", main = \"Wolves\") # Add data points add_phylopic_base(uuid = uuids,   color = \"black\", fill = c(\"blue\", \"green\"),   x = c(2.5, 7.5), y = c(2.5, 7.5), height = 2) # Add legend add_phylopic_legend(uuid = uuids,    height = 0.5, color = \"black\", fill = c(\"blue\", \"green\"),    x = \"bottomright\", legend = c(\"Wolf 1\", \"Wolf 2\"),   bg = \"lightgrey\")"},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Add PhyloPics to a phylogenetic tree plotted with base R — add_phylopic_tree","title":"Add PhyloPics to a phylogenetic tree plotted with base R — add_phylopic_tree","text":"Specify existing images, taxonomic names, PhyloPic uuids add PhyloPic silhouettes alongside associated leaves phylogenetic tree plotted active graphics device using base R graphics functions.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add PhyloPics to a phylogenetic tree plotted with base R — add_phylopic_tree","text":"","code":"add_phylopic_tree(   tree,   tip = names(img) %||% names(uuid) %||% names(name) %||% name,   img = NULL,   name = if (is.null(img) && is.null(uuid)) tip else NULL,   uuid = NULL,   width,   padding = NULL,   relWidth = 0.06,   relPadding = 1/200,   hjust = 0,   ... )"},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add PhyloPics to a phylogenetic tree plotted with base R — add_phylopic_tree","text":"tree phylogenetic tree object class phylo add silhouette. tip tip labels add silhouettes. specified, names img, uuid name vector used. img Picture png array object, e.g., using get_phylopic(). name character. taxonomic name passed get_uuid(). uuid character. valid uuid PhyloPic silhouette (returned get_uuid() pick_phylopic()). width numeric. Width silhouette coordinate space. \"NULL\", default, height also \"NULL\", silhouette large fits plot area. \"NULL\" height specified, width determined aspect ratio original image. One height width must \"NULL\". padding, relPadding Distance inset silhouette right edge plotting area, plot coordinate system (padding) relative size plotting area (relPadding). Negative values offset right. relWidth width silhouette relative plotting area. hjust numeric. numeric vector 0 1 specifying horizontal justification (left = 0, center = 0.5, right = 1). ... arguments pass add_phylopic_base().","code":""},{"path":[]},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_tree.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add PhyloPics to a phylogenetic tree plotted with base R — add_phylopic_tree","text":"Martin R. Smith (martin.smith@durham.ac.uk)","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/add_phylopic_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add PhyloPics to a phylogenetic tree plotted with base R — add_phylopic_tree","text":"","code":"if (FALSE) { # \\dontrun{  # Load the ape library to work with phylogenetic trees library(\"ape\")  # Read a phylogenetic tree tree <- ape::read.tree(text = \"(cat, (dog, mouse));\")  # Set a large right margin to accommodate the silhouettes par(mar = c(1, 1, 1, 10))  # Plot the tree plot(tree)  # Add a PhyloPic silhouette of a cat to the tree add_phylopic_tree(   tree, # Must be the tree that was plotted   \"cat\", # Which leaf should the silhouette be plotted against?   uuid = \"23cd6aa4-9587-4a2e-8e26-de42885004c9\", # Silhouette to plot   relWidth = 0.2,   fill = \"brown\" ) } # }"},{"path":"https://rphylopic.palaeoverse.org/reference/browse_phylopic.html","id":null,"dir":"Reference","previous_headings":"","what":"Browse PhyloPic for a given taxonomic name or uuid — browse_phylopic","title":"Browse PhyloPic for a given taxonomic name or uuid — browse_phylopic","text":"function provides convenient way browse PhyloPic given taxonomic name uuid.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/browse_phylopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browse PhyloPic for a given taxonomic name or uuid — browse_phylopic","text":"","code":"browse_phylopic(name = NULL, uuid = NULL)"},{"path":"https://rphylopic.palaeoverse.org/reference/browse_phylopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Browse PhyloPic for a given taxonomic name or uuid — browse_phylopic","text":"name character. taxonomic name. Various taxonomic levels supported (e.g. species, genus, family). uuid character. PhyloPic image uuid, acquired get_uuid().","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/browse_phylopic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Browse PhyloPic for a given taxonomic name or uuid — browse_phylopic","text":"character vector valid PhyloPic url specified name uuid. name uuid supplied, base url PhyloPic images returned.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/browse_phylopic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Browse PhyloPic for a given taxonomic name or uuid — browse_phylopic","text":"function returns PhyloPic url input name uuid opens user's default web browser url. name uuid supplied, base url PhyloPic images returned opened instead.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/browse_phylopic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Browse PhyloPic for a given taxonomic name or uuid — browse_phylopic","text":"","code":"if (FALSE) { # \\dontrun{ url <- browse_phylopic(name = \"Acropora cervicornis\") } # }"},{"path":"https://rphylopic.palaeoverse.org/reference/flip_phylopic.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip a PhyloPic silhouette along its horizontal and/or vertical axis — flip_phylopic","title":"Flip a PhyloPic silhouette along its horizontal and/or vertical axis — flip_phylopic","text":"picture can Picture png array object, e.g., using get_phylopic().","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/flip_phylopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip a PhyloPic silhouette along its horizontal and/or vertical axis — flip_phylopic","text":"","code":"flip_phylopic(img, horizontal = TRUE, vertical = FALSE)"},{"path":"https://rphylopic.palaeoverse.org/reference/flip_phylopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip a PhyloPic silhouette along its horizontal and/or vertical axis — flip_phylopic","text":"img Picture png array object, e.g., using get_phylopic(). horizontal logical. silhouette flipped horizontally? vertical logical. silhouette flipped vertically?","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/flip_phylopic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flip a PhyloPic silhouette along its horizontal and/or vertical axis — flip_phylopic","text":"Picture png array object (matching type img)","code":""},{"path":[]},{"path":"https://rphylopic.palaeoverse.org/reference/geom_phylopic.html","id":null,"dir":"Reference","previous_headings":"","what":"Geom for adding PhyloPic silhouettes to a plot — geom_phylopic","title":"Geom for adding PhyloPic silhouettes to a plot — geom_phylopic","text":"geom acts like ggplot2::geom_point(), except specified silhouettes used points. Silhouettes can specified name, uuid, image objects (img).","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/geom_phylopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geom for adding PhyloPic silhouettes to a plot — geom_phylopic","text":"","code":"geom_phylopic(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE,   remove_background = TRUE,   verbose = FALSE,   filter = NULL )"},{"path":"https://rphylopic.palaeoverse.org/reference/geom_phylopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geom for adding PhyloPic silhouettes to a plot — geom_phylopic","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? FALSE, default, never includes, NA includes aesthetics mapped, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). remove_background logical. white background removed silhouette(s)? See recolor_phylopic() details. verbose logical. attribution information used silhouette(s) printed console (see get_attribution())? filter character. Filter usage license using name aesthetic. Use \"\" limit results images require attribution, \"nc\" images allows commercial usage, \"sa\" images without ShareAlike clause. user can also combine filters vector.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/geom_phylopic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geom for adding PhyloPic silhouettes to a plot — geom_phylopic","text":"One (one) img, name, uuid aesthetics must specified. img aesthetic can Picture objects png array objects, e.g., using get_phylopic(). Use x y aesthetics place silhouettes specified positions plot. height width aesthetic specifies height width, respectively, silhouettes units y axis (one allowed). aspect ratio silhouettes always maintained. hjust vjust aesthetics can used manage justification silhouettes respect x y coordinates. color (default: NA), fill (default: \"black\"), alpha ( default: 1) aesthetics can used change outline color, fill color, transparency (outline fill) silhouettes, respectively. color specified fill NA color used fill color (backwards compatibility). \"original\" specified color aesthetic, original color silhouette outline used (usually \"transparent\"). \"original\" specified fill aesthetic, original color silhouette body used (usually \"black\"). remove fill outline, can set fill color \"transparent\", respectively. horizontal vertical aesthetics can used flip silhouettes. angle aesthetic can used rotate silhouettes. specifying horizontal /vertical flip rotation, flip(s) always occur first. like customize behavior, can flip /rotate image within workflow using flip_phylopic() rotate_phylopic(). Note png array objects can rotated multiples 90 degrees. Also, outline colors currently work png array objects.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/geom_phylopic.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Geom for adding PhyloPic silhouettes to a plot — geom_phylopic","text":"geom_phylopic understands following aesthetics: x (required) y (required) img uuid name (one, one, required) height width (optional, maximum one allowed) ysize  Deprecated favor height width color colour fill alpha horizontal vertical angle hjust vjust Learn setting aesthetics add_phylopic().","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/geom_phylopic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geom for adding PhyloPic silhouettes to a plot — geom_phylopic","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) df <- data.frame(x = c(2, 4), y = c(10, 20),                  name = c(\"Felis silvestris catus\", \"Odobenus rosmarus\")) ggplot(df) +   geom_phylopic(aes(x = x, y = y, name = name),                 fill = \"purple\", height = 10) +   facet_wrap(~name) +   coord_cartesian(xlim = c(1,6), ylim = c(5, 30)) } # }"},{"path":"https://rphylopic.palaeoverse.org/reference/get_attribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Get PhyloPic attribution data — get_attribution","title":"Get PhyloPic attribution data — get_attribution","text":"function provides convenient way obtain attribution data PhyloPic images via image uuid returned get_uuid().","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/get_attribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get PhyloPic attribution data — get_attribution","text":"","code":"get_attribution(uuid = NULL, img = NULL, text = FALSE, permalink = FALSE)"},{"path":"https://rphylopic.palaeoverse.org/reference/get_attribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get PhyloPic attribution data — get_attribution","text":"uuid character. vector valid uuid(s) PhyloPic silhouette(s) returned get_uuid() pick_phylopic(). img Picture png array object get_phylopic(). list objects can also supplied. img supplied, uuid ignored. Defaults NULL. text logical. attribution information returned text paragraph? Defaults FALSE. permalink logical. permalink created collection uuid(s)? Defaults FALSE.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/get_attribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get PhyloPic attribution data — get_attribution","text":"list PhyloPic attribution data image uuid text output relevant attribution information.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/get_attribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get PhyloPic attribution data — get_attribution","text":"function returns image uuid specific attribution data, including: contributor name, contributor uuid, contributor contact, image uuid, license, license abbreviation. text set TRUE, text paragraph contributor name, year contribution, license type printed image attribution data returned invisibly (.e. using invisible(). permalink set TRUE, permanent link (hosted PhyloPic) generated. link can used view share details image silhouettes, including contributors licenses.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/get_attribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get PhyloPic attribution data — get_attribution","text":"","code":"if (FALSE) { # \\dontrun{ # Get valid uuid uuid <- get_uuid(name = \"Acropora cervicornis\") # Get attribution data for uuid attri <- get_attribution(uuid = uuid)  # Get list of valid uuids uuids <- get_uuid(name = \"Scleractinia\", n = 5) # Get attribution data for uuids get_attribution(uuid = uuids, text = TRUE) # Get attribution data for uuids and create permalink get_attribution(uuid = uuids, text = TRUE, permalink = TRUE) } # }"},{"path":"https://rphylopic.palaeoverse.org/reference/get_phylopic.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve an image for a given PhyloPic uuid — get_phylopic","title":"Retrieve an image for a given PhyloPic uuid — get_phylopic","text":"retrieves PhyloPic silhouette vectorized rasterized object.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/get_phylopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve an image for a given PhyloPic uuid — get_phylopic","text":"","code":"get_phylopic(uuid = NULL, format = \"vector\", height = 512, preview = FALSE)  # S3 method for class 'Picture' print(x, ...)  # S3 method for class 'phylopic' print(x, ...)"},{"path":"https://rphylopic.palaeoverse.org/reference/get_phylopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve an image for a given PhyloPic uuid — get_phylopic","text":"uuid character. PhyloPic image uuid. format character. Format image. return vectorized image, use \"vector\". return rasterized image, use \"raster\" specify desired height. height numeric. format \"raster\", desired height raster image pixels. ignored format \"vector\". preview logical. preview TRUE, returned image plotted. Defaults FALSE. x Picture png array object, e.g., using get_phylopic(). ... Ignored","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/get_phylopic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve an image for a given PhyloPic uuid — get_phylopic","text":"format \"vector\", Picture object returned. format \"raster\", png array representing rasterized image returned. Either way, uuid download url included \"uuid\" \"url\" attributes, respectively.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/get_phylopic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve an image for a given PhyloPic uuid — get_phylopic","text":"height argument ignored format argument set \"raster\". format \"raster\", height argument specifies height desired raster object. width raster object determined original aspect ratio silhouette. pre-rendered raster exists desired dimensions, downloaded PhyloPic. , vector image PhyloPic used render raster object desired size.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/get_phylopic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve an image for a given PhyloPic uuid — get_phylopic","text":"","code":"if (FALSE) { # \\dontrun{ # uuid uuid <- \"9fae30cd-fb59-4a81-a39c-e1826a35f612\"  # Get data for an image img_svg <- get_phylopic(uuid, format = \"vector\") # vector format img_png <- get_phylopic(uuid, format = \"raster\") # raster format } # }"},{"path":"https://rphylopic.palaeoverse.org/reference/get_uuid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a PhyloPic uuid — get_uuid","title":"Get a PhyloPic uuid — get_uuid","text":"function provides convenient way obtain valid uuid image url input taxonomic name. multiple silhouettes can exist species PhyloPic, function extracts primary image.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/get_uuid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a PhyloPic uuid — get_uuid","text":"","code":"get_uuid(name = NULL, img = NULL, n = 1, filter = NULL, url = FALSE)"},{"path":"https://rphylopic.palaeoverse.org/reference/get_uuid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a PhyloPic uuid — get_uuid","text":"name character. taxonomic name. Various taxonomic levels supported (e.g. species, genus, family). NULL can also supplied skip taxonomic filtering PhyloPic database. img Picture png array object get_phylopic(). list objects can also supplied. img supplied, name n ignored. Defaults NULL. n numeric. many uuids returned? Depending requested name, multiple silhouettes might exist. n exceeds number available images, available uuids returned. argument defaults 1. filter character. Filter uuid(s) usage license. Use \"\" limit results image uuids require attribution, \"nc\" image uuids allow commercial usage, \"sa\" image uuids without ShareAlike clause. user can also combine filters vector. url logical. FALSE (default), uuid returned. TRUE, valid PhyloPic image url uuid returned.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/get_uuid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a PhyloPic uuid — get_uuid","text":"character vector valid PhyloPic uuid svg image url.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/get_uuid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a PhyloPic uuid — get_uuid","text":"function returns uuid(s) image url (svg) input name. specific image desired, user can make use pick_phylopic visually select desired uuid/url.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/get_uuid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a PhyloPic uuid — get_uuid","text":"","code":"if (FALSE) { # \\dontrun{ uuid <- get_uuid(name = \"Acropora cervicornis\") uuid <- get_uuid(name = \"Dinosauria\", n = 5, url = TRUE) } # }"},{"path":"https://rphylopic.palaeoverse.org/reference/phylopic_key_glyph.html","id":null,"dir":"Reference","previous_headings":"","what":"Use PhyloPics as legend key glyphs — phylopic_key_glyph","title":"Use PhyloPics as legend key glyphs — phylopic_key_glyph","text":"Specify existing images, taxonomic names, PhyloPic uuids use PhyloPic silhouettes legend key glyphs ggplot plot.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/phylopic_key_glyph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use PhyloPics as legend key glyphs — phylopic_key_glyph","text":"","code":"phylopic_key_glyph(img = NULL, name = NULL, uuid = NULL)"},{"path":"https://rphylopic.palaeoverse.org/reference/phylopic_key_glyph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use PhyloPics as legend key glyphs — phylopic_key_glyph","text":"img Picture png array object, e.g., using get_phylopic(). name character. taxonomic name passed get_uuid(). uuid character. valid uuid PhyloPic silhouette (returned get_uuid() pick_phylopic()).","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/phylopic_key_glyph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use PhyloPics as legend key glyphs — phylopic_key_glyph","text":"One (one) img, name, uuid must specified. argument may also vector/list valid values multiple silhouettes used key glyphs. case, specified silhouettes used ordered key glyphs one one, recycling necessary. Note sizes silhouettes legend currently maximized based size key. size can modified using legend.key.size argument ggplot2::theme(). Therefore, silhouettes reflect size aesthetic, function used size legends.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/phylopic_key_glyph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use PhyloPics as legend key glyphs — phylopic_key_glyph","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) df <- data.frame(x = c(2, 4), y = c(10, 20),                  name = c(\"Felis silvestris catus\", \"Odobenus rosmarus\")) ggplot(df) +   geom_phylopic(aes(x = x, y = y, name = name, color = name), size = 10,                 show.legend = TRUE,                 key_glyph = phylopic_key_glyph(name =                                                c(\"Felis silvestris catus\",                                                  \"Odobenus rosmarus\"))) +   coord_cartesian(xlim = c(1,6), ylim = c(5, 30)) } # }"},{"path":"https://rphylopic.palaeoverse.org/reference/pick_phylopic.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick a PhyloPic image from available options — pick_phylopic","title":"Pick a PhyloPic image from available options — pick_phylopic","text":"function provides visually interactive way pick image valid uuid input taxonomic name. multiple silhouettes can exist organism PhyloPic, function useful choosing right image/uuid user.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/pick_phylopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick a PhyloPic image from available options — pick_phylopic","text":"","code":"pick_phylopic(   name = NULL,   n = 5,   uuid = NULL,   view = 1,   filter = NULL,   auto = NULL )"},{"path":"https://rphylopic.palaeoverse.org/reference/pick_phylopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick a PhyloPic image from available options — pick_phylopic","text":"name character. taxonomic name. Different taxonomic levels supported (e.g. species, genus, family). n numeric. many uuids viewed? Depending requested name, multiple silhouettes may exist. n exceeds number available images, available uuids returned. Defaults 5. relevant name supplied. uuid character. vector (list) valid PhyloPic silhouette uuids, returned get_uuid() resolve_phylopic(). view numeric. Number silhouettes plotted time. Defaults 1. filter character. Filter uuid(s) usage license. Use \"\" limit results image uuids require attribution, \"nc\" image uuids allow commercial usage, \"sa\" image uuids without ShareAlike clause. user can also combine filters. relevant name supplied. auto numeric. argument allows user automate input menu choice. input value 1, first returned image selected. input value 2, requested images automatically cycled final image returned. input value 3, list attribution information image returned (functionality principally intended testing). NULL (default), user must interactively respond called menu.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/pick_phylopic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pick a PhyloPic image from available options — pick_phylopic","text":"Picture object returned. uuid selected image saved \"uuid\" attribute returned object also printed console.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/pick_phylopic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pick a PhyloPic image from available options — pick_phylopic","text":"function allows user visually select desired image pool silhouettes available input name. Note view argument can positive integer, weaker/older computers may issues displaying large numbers images time (.e. view > 9). images displayed plotting environment, try decreasing value view.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/pick_phylopic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pick a PhyloPic image from available options — pick_phylopic","text":"","code":"if (FALSE) { # \\dontrun{ # Defaults pane layout img <- pick_phylopic(name = \"Canis lupus\", n = 5) # 3 x 3 pane layout img <- pick_phylopic(name = \"Scleractinia\", n = 9, view = 9) } # }"},{"path":"https://rphylopic.palaeoverse.org/reference/plot_phylopic.html","id":null,"dir":"Reference","previous_headings":"","what":"Preview a PhyloPic silhouette — plot.Picture","title":"Preview a PhyloPic silhouette — plot.Picture","text":"Preview raster vector representation PhyloPic silhouette. plot silhouette new page default plotting device.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/plot_phylopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preview a PhyloPic silhouette — plot.Picture","text":"","code":"# S3 method for class 'Picture' plot(x, ...)  # S3 method for class 'phylopic' plot(x, ...)"},{"path":"https://rphylopic.palaeoverse.org/reference/plot_phylopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preview a PhyloPic silhouette — plot.Picture","text":"x Picture png array object, e.g., using get_phylopic(). ... arguments passed grImport2::grid.picture() grid::grid.raster().","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/recolor_phylopic.html","id":null,"dir":"Reference","previous_headings":"","what":"Recolor a PhyloPic image — recolor_phylopic","title":"Recolor a PhyloPic image — recolor_phylopic","text":"Function recolor change alpha levels PhyloPic image.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/recolor_phylopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recolor a PhyloPic image — recolor_phylopic","text":"","code":"recolor_phylopic(   img,   alpha = 1,   color = NULL,   fill = NULL,   remove_background = TRUE )"},{"path":"https://rphylopic.palaeoverse.org/reference/recolor_phylopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recolor a PhyloPic image — recolor_phylopic","text":"img Picture png array object, e.g., using get_phylopic(). alpha numeric. value 0 1, specifying opacity silhouette. color character. Color make outline silhouette. NULL, outline color changed. fill character. Color make body silhouette. NULL, body color changed. remove_background logical. white background removed? useful img Picture object. See details.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/recolor_phylopic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recolor a PhyloPic image — recolor_phylopic","text":"Picture png array object (matching type img)","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/recolor_phylopic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recolor a PhyloPic image — recolor_phylopic","text":"PhyloPic silhouettes transparent background. Consequently, color used vectorized versions images, entire image–including background–recolored. Setting remove_background TRUE (default) remove white parts image (background).","code":""},{"path":[]},{"path":"https://rphylopic.palaeoverse.org/reference/resolve_phylopic.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a taxonomic name from another database to get a PhyloPic image UUID — resolve_phylopic","title":"Use a taxonomic name from another database to get a PhyloPic image UUID — resolve_phylopic","text":"function takes supplied taxonomic name, queries via specified external API, resolves API's returned taxonomic ID PhyloPic taxonomic node database, retrieves PhyloPic image uuids (urls) node.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/resolve_phylopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a taxonomic name from another database to get a PhyloPic image UUID — resolve_phylopic","text":"","code":"resolve_phylopic(   name,   api = \"gbif.org\",   hierarchy = FALSE,   max_ranks = 5,   n = 1,   filter = NULL,   url = FALSE )"},{"path":"https://rphylopic.palaeoverse.org/reference/resolve_phylopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a taxonomic name from another database to get a PhyloPic image UUID — resolve_phylopic","text":"name character. full partial taxonomic name queried via specified api. api character. API query name. See Details available options. hierarchy logical. Whether taxonomic hierarchy name retrieved API used get several sets PhyloPic image uuids (urls). max_ranks numeric. maximum number taxonomic ranks included hierarchy TRUE. n numeric. many uuids returned? Depending requested name, multiple silhouettes might exist. n exceeds number available images, available uuids returned. argument defaults 1. filter character. Filter uuid(s) usage license. Use \"\" limit results image uuids require attribution, \"nc\" image uuids allow commercial usage, \"sa\" image uuids without ShareAlike clause. user can also combine filters vector. url logical. FALSE (default), uuid returned. TRUE, valid PhyloPic image url uuid returned.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/resolve_phylopic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a taxonomic name from another database to get a PhyloPic image UUID — resolve_phylopic","text":"list value n (fewer) PhyloPic image uuids (urls url = TRUE) name taxonomic name matched reported specified api. hierarchy FALSE, list length 1. hierarchy TRUE, list maximum length max_ranks.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/resolve_phylopic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use a taxonomic name from another database to get a PhyloPic image UUID — resolve_phylopic","text":"hierarchy FALSE, specified name queried via specified api. matched id resolved matching taxonomic node PhyloPic database. hierarchy TRUE, full taxonomic hierarchy name retrieved specified api, taxonomic names subset max_ranks ranks (starting specified name ascending hierarchy). names resolved matching taxonomic node PhyloPic database (possible). either case, get_uuid() used retrieve n image UUID(s) taxonomic name. Note names returned list taxonomic names reported specified api, PhyloPic images returned associated whatever taxonomic node taxonomic name resolves PhyloPic database. means , hierarchy TRUE, images may returned multiple taxonomic names. Also, particular taxonomic name resolve node PhyloPic database, images returned name. following APIs available querying (api): \"eol.org\": Encyclopedia Life (note: hierarchy = TRUE currently available API) (\"eol\" also allowed) \"gbif.org\": Global Biodiversity Information Facility (\"gbif\" also allowed) \"marinespecies.org\": World Registor Marine Species (\"worms\" also allowed) \"opentreeoflife.org\":  Open Tree Life (\"otol\" also allowed) \"paleobiodb.org\": Paleobiology Database (\"pbdb\" also allowed)","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/resolve_phylopic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a taxonomic name from another database to get a PhyloPic image UUID — resolve_phylopic","text":"","code":"if (FALSE) { # \\dontrun{ # get a uuid for a single name resolve_phylopic(name = \"Canis lupus\") # get uuids for the taxonomic hierarchy resolve_phylopic(name = \"Velociraptor mongoliensis\", api = \"paleobiodb.org\",                  hierarchy = TRUE, max_ranks = 3) } # }"},{"path":"https://rphylopic.palaeoverse.org/reference/rotate_phylopic.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate a PhyloPic silhouette — rotate_phylopic","title":"Rotate a PhyloPic silhouette — rotate_phylopic","text":"picture can Picture png array object, e.g., using get_phylopic(). Note png array objects can rotated multiples 90 degrees.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/rotate_phylopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate a PhyloPic silhouette — rotate_phylopic","text":"","code":"rotate_phylopic(img, angle = 90)"},{"path":"https://rphylopic.palaeoverse.org/reference/rotate_phylopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate a PhyloPic silhouette — rotate_phylopic","text":"img Picture png array object, e.g., using get_phylopic(). angle numeric. number degrees rotate silhouette clockwise.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/rotate_phylopic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate a PhyloPic silhouette — rotate_phylopic","text":"Picture png array object (matching type img)","code":""},{"path":[]},{"path":"https://rphylopic.palaeoverse.org/reference/rphylopic-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rphylopic: Get Silhouettes of Organisms from PhyloPic — rphylopic-package","title":"rphylopic: Get Silhouettes of Organisms from PhyloPic — rphylopic-package","text":"Work PhyloPic Web Service (http://api-docs.phylopic.org/v2/) fetch silhouette images organisms. Includes functions adding silhouettes base R plots ggplot2 plots.","code":""},{"path":[]},{"path":"https://rphylopic.palaeoverse.org/reference/rphylopic-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rphylopic: Get Silhouettes of Organisms from PhyloPic — rphylopic-package","text":"Maintainer: William Gearty willgearty@gmail.com (ORCID) Authors: Lewis . Jones LewisAlan.Jones@uvigo.es (ORCID) Scott Chamberlain myrmecocystus@gmail.com (ORCID) contributors: David Miller dave@ninepointeightone.net [contributor]","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/save_phylopic.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a PhyloPic image — save_phylopic","title":"Save a PhyloPic image — save_phylopic","text":"save_phylopic convenient function saving PhyloPic silhouette fetched via get_phylopic. Available formats saving available grDevices package (.e. pdf, png, svg, tiff, jpeg, bmp).","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/save_phylopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a PhyloPic image — save_phylopic","text":"","code":"save_phylopic(img = NULL, path = NULL, bg = \"transparent\", ...)"},{"path":"https://rphylopic.palaeoverse.org/reference/save_phylopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a PhyloPic image — save_phylopic","text":"img picture. Picture object. PhyloPic silhouettes, generated get_phylopic pick_phylopic. path character. output file path. name file file extension included (e.g. \"./phylopic.png\"). argument NULL (default), file automatically saved current working directory png file. bg character. desired background color. default argument set \"transparent\". Note: .jpeg files always exported background colour. ... Additional arguments available called grDevices function. called function determined file extension used path (e.g. png).","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/save_phylopic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a PhyloPic image — save_phylopic","text":"image saved. Nothing returned R interface.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/save_phylopic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save a PhyloPic image — save_phylopic","text":"function can used save PhyloPic image obtained via get_phylopic object class Picture grImport2 package. file format available grDevices package can used (.e. pdf, png, svg, tiff, jpeg, bmp).","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/save_phylopic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a PhyloPic image — save_phylopic","text":"","code":"if (FALSE) { # \\dontrun{ # Get image data img <- get_phylopic(\"27356f15-3cf8-47e8-ab41-71c6260b2724\") # Save file save_phylopic(img = img, path = \"./phylopic.png\",               width = 500, height = 500) } # }"},{"path":"https://rphylopic.palaeoverse.org/reference/scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales for phylopic height or width — scale_height_continuous","title":"Scales for phylopic height or width — scale_height_continuous","text":"scale_height_continuous() scales height silhouettes whereas scale_width_continuous() scales height silhouettes.","code":""},{"path":"https://rphylopic.palaeoverse.org/reference/scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales for phylopic height or width — scale_height_continuous","text":"","code":"scale_height_continuous(   name = waiver(),   breaks = waiver(),   labels = waiver(),   limits = NULL,   range = c(1, 6),   transform = \"identity\",   trans = lifecycle::deprecated(),   guide = \"none\" )  scale_width_continuous(   name = waiver(),   breaks = waiver(),   labels = waiver(),   limits = NULL,   range = c(1, 6),   transform = \"identity\",   trans = lifecycle::deprecated(),   guide = \"none\" )"},{"path":"https://rphylopic.palaeoverse.org/reference/scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales for phylopic height or width — scale_height_continuous","text":"name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. breaks One : NULL breaks waiver() default breaks computed transformation object numeric vector positions function takes limits input returns breaks output (e.g., function returned scales::extended_breaks()). Note position scales, limits provided scale expansion. Also accepts rlang lambda function notation. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits One : NULL use default scale range numeric vector length two providing limits scale. Use NA refer existing minimum maximum function accepts existing (automatic) limits returns new limits. Also accepts rlang lambda function notation. Note setting limits positional scales remove data outside limits. purpose zoom, use limit argument coordinate system (see coord_cartesian()). range numeric vector length 2 specifies minimum maximum size plotting symbol transformation. transform continuous scales, name transformation object object . Built-transformations include \"asn\", \"atanh\", \"boxcox\", \"date\", \"exp\", \"hms\", \"identity\", \"log\", \"log10\", \"log1p\", \"log2\", \"logit\", \"modulus\", \"probability\", \"probit\", \"pseudo_log\", \"reciprocal\", \"reverse\", \"sqrt\" \"time\". transformation object bundles together transform, inverse, methods generating breaks labels. Transformation objects defined scales package, called transform_<name>. transformations require arguments, can call scales package, e.g. scales::transform_boxcox(p = 2). can create transformation scales::new_transform(). trans Deprecated favour transform. guide function used create guide name. See guides() information.","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"rphylopic-development-version","dir":"Changelog","previous_headings":"","what":"rphylopic (development version)","title":"rphylopic (development version)","text":"Added add_phylopic_tree() add silhouettes plotted trees (#110) Fixed bug add_phylopic_base() names reported returning PhyloPic results single name actually returned PhyloPic results resolve_phylopic() now retry API calls fail Fixed geom_phylopic() add_phylopic() ggplot2 4.0.0 (#125)","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"rphylopic-150","dir":"Changelog","previous_headings":"","what":"rphylopic 1.5.0","title":"rphylopic 1.5.0","text":"CRAN release: 2024-09-04 Added ability specify horizontal vertical justification silhouettes (#101) Note “ysize” “size” arguments/aesthetics now deprecated favor “height” “width” arguments/aesthetics","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"rphylopic-140","dir":"Changelog","previous_headings":"","what":"rphylopic 1.4.0","title":"rphylopic 1.4.0","text":"CRAN release: 2024-04-23 Added add_phylopic_legend (#83) Added permalink generation option get_attribution (#81)","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"rphylopic-130","dir":"Changelog","previous_headings":"","what":"rphylopic 1.3.0","title":"rphylopic 1.3.0","text":"CRAN release: 2023-12-20 updated citation added warning specified size 1000 times smaller y-axis range (mostly useful making maps coord_sf) (#86) changed defaults behavior color fill argument/aesthetics better maintain backwards compatibility also prevent unnecessary outlines (#87) added resolve_phylopic (#66) pick_phylopic now accepts list uuids via uuid argument (#95) fixed check behavior CRAN (tests examples now skipped) caught rare error nothing matched filter","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"rphylopic-122","dir":"Changelog","previous_headings":"","what":"rphylopic 1.2.2","title":"rphylopic 1.2.2","text":"CRAN release: 2023-10-28 vignettes now precompiled","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"rphylopic-121","dir":"Changelog","previous_headings":"","what":"rphylopic 1.2.1","title":"rphylopic 1.2.1","text":"CRAN release: 2023-10-10 updated rphylopic work grImport2 version 0.3.0 rsvg version 2.6.0 rphylopic now requires grImport2 >= 0.3.0 rsvg >= 2.6.0","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"rphylopic-120","dir":"Changelog","previous_headings":"","what":"rphylopic 1.2.0","title":"rphylopic 1.2.0","text":"CRAN release: 2023-08-29 added text argument get_attribution (#56) get_attribution now handles multiple uuids added browse_phylopic function (#60) added preview argument get_phylopic (#59) switched {maps} package base R advanced vignette geom_phylopic now properly handles single unlisted image object passed “img” parameter (#75) added filter (license) argument get_uuid, pick_phylo, add_phylopic_base, add_phylopic, geom_phylopic (#72) added img argument get_uuid get_attribution added verbose argument (calls get_attribution) geom_phylopic, add_phylopic, add_phylopic_base (#71) color argument/aesthetic specified, copied fill argument/aesthetic (maintaining mostly backwards compatibility old code) added plot print methods silhouette objects (#73) fixed behavior geom_phylopic used coord_sf added phylopic_key_glyph using silhouettes inside ggplot legends (#57)","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"rphylopic-111","dir":"Changelog","previous_headings":"","what":"rphylopic 1.1.1","title":"rphylopic 1.1.1","text":"CRAN release: 2023-07-08 Minor fixes Fedora Better handling malformed Picture objects","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"rphylopic-110","dir":"Changelog","previous_headings":"","what":"rphylopic 1.1.0","title":"rphylopic 1.1.0","text":"CRAN release: 2023-06-30 added functions transforming PhyloPic silhouettes (flipping rotating) save_phylopic bg argument updated “transparent” default added geom_phylopic (#25) vectorized add_phylopic add_phylopic_base (#42) recolor_phylopic now removes white backgrounds default fixed handling alpha values get_phylopic can now return size raster image (#50) removed “thumbnail” “twitter” format options get_phylopic fixed silhouettes gathered PhyloPic (#51) pick_phylopic updated allow visualization multiple silhouettes (#43) fixed add_phylopic_base multi-panel figures added three vignettes (#49, #55)","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"rphylopic-100","dir":"Changelog","previous_headings":"","what":"rphylopic 1.0.0","title":"rphylopic 1.0.0","text":"CRAN release: 2023-03-20 rphylopic now transferred Palaeoverse community (new maintainer: William Gearty author: Lewis Jones) package updated work PhyloPic API ver. >=2.1.1 get_uuid: function enables users get uuid(s) associated taxonomic name (new function) get_phylopic: function enables users get PhyloPic silhouette associated specific uuid (replaces image_get) pick_phylopic: function enables users pick specific PhyloPic silhouettes multiple available given taxonomic name (new function) add_phylopic_base: function retains ’s core functionality used add silhouette base R plot (updated add_phylopic_base) add_phylopic: function retains ’s core functionality used add silhouette ggplot2 (updated add_phylopic) get_attribution: function enables users get attribution data associated specific uuid (new function) save_phylopic: function enables users save PhyloPic silhouettes using various formats (replaces save_png)","code":""},{"path":[]},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"new-features-0-3-4","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rphylopic 0.3.4","text":"New exported function: gather_images check_for_a_pkg messager message_parallel","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"rphylopic-030","dir":"Changelog","previous_headings":"","what":"rphylopic 0.3.0","title":"rphylopic 0.3.0","text":"CRAN release: 2020-06-04","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rphylopic 0.3.0","text":"PDF cheatsheet hex sticker added, @GabsPalomo (#24)","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"minor-improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rphylopic 0.3.0","text":"fix add_phylopic_base(): remove use par() internally, better behavior (#26) (#28)","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"defunct-0-3-0","dir":"Changelog","previous_headings":"","what":"DEFUNCT","title":"rphylopic 0.3.0","text":"plot_phylopic_base() removed, see ?add_phylopic_base (#27) (#28)","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"rphylopic-020","dir":"Changelog","previous_headings":"","what":"rphylopic 0.2.0","title":"rphylopic 0.2.0","text":"CRAN release: 2018-11-19","code":""},{"path":"https://rphylopic.palaeoverse.org/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rphylopic 0.2.0","text":"released CRAN","code":""}]
